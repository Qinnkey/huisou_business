<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huisou.mapper.OrderPoMapper" >
  <resultMap id="BaseResultMap" type="com.huisou.po.OrderPo" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="res_id" property="resId" jdbcType="INTEGER" />
    <result column="res_type" property="resType" jdbcType="VARCHAR" />
    <result column="order_pay" property="orderPay" jdbcType="DECIMAL" />
    <result column="pay_status" property="payStatus" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="order_person_num" property="orderPersonNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="standby1" property="standby1" jdbcType="VARCHAR" />
    <result column="standby2" property="standby2" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="OrderVoResultMap" type="com.huisou.vo.OrderVo" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="res_id" property="resId" jdbcType="INTEGER" />
    <result column="resTitle" property="resTitle" jdbcType="VARCHAR" />
    <result column="res_type" property="resType" jdbcType="VARCHAR" />
    <result column="order_pay" property="orderPay" jdbcType="DECIMAL" />
    <result column="pay_status" property="payStatus" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="course_logo" property="courseLogo" jdbcType="VARCHAR" />
    <result column="order_person_num" property="orderPersonNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="course_price" property="coursePrice" jdbcType="DECIMAL" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
     <result column="username" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    order_id, order_no, res_id, res_type, order_pay, pay_status, user_id, phone, order_person_num, 
    create_time, update_time, order_status, standby1, standby2
  </sql>
  
  <sql id="Order_Column_List" >
    o.order_id,o.order_no,o.order_pay,o.pay_status,o.user_id,o.phone,o.create_time,
	o.order_person_num ,u.nickname,u.openid,
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from busi_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from busi_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huisou.po.OrderPo" >
    <selectKey resultType="java.lang.Integer" keyProperty="orderId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into busi_order (order_no, res_id, res_type, 
      order_pay, pay_status, user_id, 
      phone, order_person_num, create_time, 
      update_time, order_status, standby1, 
      standby2)
    values (#{orderNo,jdbcType=VARCHAR}, #{resId,jdbcType=INTEGER}, #{resType,jdbcType=VARCHAR}, 
      #{orderPay,jdbcType=DECIMAL}, #{payStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{orderPersonNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=VARCHAR}, #{standby1,jdbcType=VARCHAR}, 
      #{standby2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huisou.po.OrderPo" >
    <selectKey resultType="java.lang.Integer" keyProperty="orderId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into busi_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="resId != null" >
        res_id,
      </if>
      <if test="resType != null" >
        res_type,
      </if>
      <if test="orderPay != null" >
        order_pay,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="orderPersonNum != null" >
        order_person_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="standby1 != null" >
        standby1,
      </if>
      <if test="standby2 != null" >
        standby2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="resId != null" >
        #{resId,jdbcType=INTEGER},
      </if>
      <if test="resType != null" >
        #{resType,jdbcType=VARCHAR},
      </if>
      <if test="orderPay != null" >
        #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="orderPersonNum != null" >
        #{orderPersonNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="standby1 != null" >
        #{standby1,jdbcType=VARCHAR},
      </if>
      <if test="standby2 != null" >
        #{standby2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huisou.po.OrderPo" >
    update busi_order
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="resId != null" >
        res_id = #{resId,jdbcType=INTEGER},
      </if>
      <if test="resType != null" >
        res_type = #{resType,jdbcType=VARCHAR},
      </if>
      <if test="orderPay != null" >
        order_pay = #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="orderPersonNum != null" >
        order_person_num = #{orderPersonNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="standby1 != null" >
        standby1 = #{standby1,jdbcType=VARCHAR},
      </if>
      <if test="standby2 != null" >
        standby2 = #{standby2,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huisou.po.OrderPo" >
    update busi_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      res_id = #{resId,jdbcType=INTEGER},
      res_type = #{resType,jdbcType=VARCHAR},
      order_pay = #{orderPay,jdbcType=DECIMAL},
      pay_status = #{payStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      order_person_num = #{orderPersonNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      standby1 = #{standby1,jdbcType=VARCHAR},
      standby2 = #{standby2,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  
  <!-- 课程订单列表 -->
  <select id="orderCourseList" resultMap="OrderVoResultMap" parameterType="Map" >
    select 
    	<include refid="Order_Column_List" />
    	c.course_title resTitle,
    	c.course_logo courseLogo,
    	c.begin_time,
    	u.username,
    	u.classmate_user_id as classmateId
    from busi_order o
	LEFT JOIN busi_course c on o.res_id = c.course_id
	LEFT JOIN busi_user u on o.user_id = u.user_id
	WHERE res_type = 'kc'  and order_status = '1'
	<if test="resTitle != null and resTitle !='' " >
      and c.course_title like CONCAT('%', #{resTitle},'%')
    </if>
    <if test="param != null and param !='' " >
      and(
	    	o.order_no like CONCAT('%', #{param},'%')
	  		or u.username like CONCAT('%', #{param},'%')
	  		or u.phone like CONCAT('%', #{param},'%')
	  		)
    </if>
    <if test="isStartStatus != null and isStartStatus !='' " >
      and c.is_start_status = #{isStartStatus}
    </if>
     <if test="courseId != null and courseId !='' " >
      and c.course_id = #{courseId}
    </if>
    <if test="orderNo != null and orderNo!='' ">
      and o.order_no like CONCAT('%', #{orderNo},'%')
    </if>
    <if test="payStatus != null and payStatus!='' " >
      and pay_status = #{payStatus}
    </if>
    <if test="userId != null and userId!='' " >
      and o.user_id = #{userId}
    </if>
     <if test="orderId != null and orderId!='' " >
      and o.order_id = #{orderId}
    </if>
    <if test="beginDate !=null  and beginDate!='' ">
		<![CDATA[ and o.create_time >= #{beginDate} ]]>
	</if>
	<if test="endDate !=null and endDate!='' ">
		<![CDATA[ and o.create_time <= #{endDate} ]]>
	</if>
	ORDER BY o.update_time DESC
  </select>
  
  <!-- 课程订单列表 -->
  <select id="orderVideoAudioList" resultMap="OrderVoResultMap" parameterType="Map" >
    select 
    	<include refid="Order_Column_List" />
    	v.video_audio_title resTitle,
    	u.username 
    from busi_order o
	LEFT JOIN busi_video_audio v on o.res_id = v.video_audio_id
	LEFT JOIN busi_user u on o.user_id = u.user_id
	WHERE order_status = '1'
	<if test='resType != null and resType !="" ' >
      and res_type = #{resType}
    </if>
    <if test='resTitle != null and resTitle !="" ' >
      and c.course_title like CONCAT('%', #{resTitle},'%')
    </if>
    <if test='orderNo != null and orderNo!="" ' >
      and o.order_no like CONCAT('%', #{orderNo},'%')
    </if>
    <if test='payStatus != null and payStatus!="" ' >
      and pay_status = #{payStatus}
    </if>
    <if test='beginDate !=null and beginDate!="" '>
		<![CDATA[ and o.create_time >= #{beginDate} ]]>
	</if>
	<if test='endDate !=null and endDate!="" '>
		<![CDATA[ and o.create_time <= #{endDate} ]]>
	</if>
	ORDER BY o.update_time DESC
  </select>
  <select id="findByUserIdAndResId" resultMap="BaseResultMap">
  	SELECT * FROM busi_order WHERE res_id = #{resId} AND res_type=#{resType} AND user_id=#{userId} AND pay_status = #{payStatus} AND order_status='1'
  </select>
  <select id="findByMap" resultMap="BaseResultMap">
  	select * from busi_order 
  	<where>
  	   <if test="orderId != null and orderId !=''" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
  	  <if test="orderNo != null and orderNo !=''" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="resId != null and resId !=''" >
        res_id = #{resId,jdbcType=INTEGER},
      </if>
      <if test="resType != null and resType !=''" >
        res_type = #{resType,jdbcType=VARCHAR},
      </if>
      <if test="orderPay != null and orderPay !=''" >
        order_pay = #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="payStatus != null and payStatus !=''" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null and userId !=''" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="phone != null and phone !=''" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="orderPersonNum != null and orderPersonNum !=''" >
        order_person_num = #{orderPersonNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null and createTime !=''" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime !=''" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null and orderStatus !=''" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="standby1 != null and standby1 !=''" >
        standby1 = #{standby1,jdbcType=VARCHAR},
      </if>
      <if test="standby2 != null and standby2 !=''" >
        standby2 = #{standby2,jdbcType=VARCHAR},
      </if>
  	</where>
  </select>
  <select id="getSuccessCount"  parameterType="Map" resultType="java.lang.Integer">
  		select
  			COUNT(t1.order_status) AS count
  		from busi_order t1
  		where t1.pay_status = '2'
  		and t1.order_status = '1'
  		<if test="beginDate!=null and beginDate!=''">
	    	<![CDATA[   and DATE_FORMAT(t1.update_time, '%Y-%m-%d')>=  DATE_FORMAT(#{beginDate}, '%Y-%m-%d')   ]]>
		</if>
		<if test="endDate!=null and endDate!=''">
	   		<![CDATA[  and DATE_FORMAT(t1.update_time, '%Y-%m-%d') < DATE_FORMAT(#{endDate}, '%Y-%m-%d')    ]]>
		</if>
  </select>
  
  <select id="findByTradeNo"   resultMap="BaseResultMap">
  		select
  			*
  		from busi_order where order_no = #{tradeNo}
  </select>
  
  <select id="findPayAllMoney"  resultType="int">
  		select COALESCE(SUM(order_pay),0) payAllMoney from busi_order
		where pay_status = 2
		<if test="userId != null and userId !=''" >
	        and user_id = #{userId,jdbcType=INTEGER}
	    </if>
  </select>
  
  
</mapper>